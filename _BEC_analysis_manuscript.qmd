---
title: "Biogeoclimatic Ecosystem correlation methods"
author: "William H MacKenzie"
date: "15/10/2024"
format:
  typst:
    toc: true
    toc-depth: 2
    toc-title: Contents
    section-numbering: 1.1.1
    columns: 1
editor: source
execute:
  echo: false
  error: false
  warning: false
  message: false
  #fig.width: 6
  #fig.height: 4
  fig.align: 'left'
  fig.cap: true
  #fig.pos: H
  #out.width: '100%'
  dev: pdf
  fig.ext: pdf
  cache: false
  fig.retina: 2
  dpi: 600
  #fig.asp: 1.5
  fig.path: "./figures/"
---

This report describes formalized quantitative methods for assessing and correlating local classification units such as site series into a hierarchical classification. This process includes the following steps:

1.  Data clean-up and harmonization

2.  Assessment of internal consistency for proposed site units

3.  Comparison of site series within each BGC for sufficient unit differentiation

4.  Creation of hierarchical units from local site units

This report primarily focused on the development of the quantitative BEC analysis of site unit using a novel similarity metric that reflects differentiating criteria outlined in Pojar and Klinka. \[refs\]

# Historic BEC correlation approach

The principles of BEC analysis is outlined in Pojar et al. (1987). The method is based on Braun-Blanquet table analysis but modified to equally value significant differences in species mean cover and species constancy of plant communities for differentiating classification units. In this method, constancy (percent of site unit plots that a species is present) is converted into five equal *presence classes* each of 20% width (0.1 - 20% = I, 02,1-40% = II, ...). Mean cover is divided into 10 *significance classes* following the Domin-Krajina cover scale. \[\[insert table\]\]. A species is considered *differential* if it has presence class III (40-60%) or greater and is two or more presence classes greater than in the compared site unit(s). A species is considered a *dominant differential* if it has a significance class greater or equal to 5 (10.1% mean cover) and is two or more significance classes greater than the in a site unit and not present in the other site unit(s) within the *same circumscribing (higher) unit*.

There are several challenges with this method:

1.  The use of discrete classes to represent continuous data creates 'steps' that creates intuitively non-equivalent comparative differences. For example, the 21% presence difference between 61%(presence class IV) vs 40% (presence II) constancy is the equivalent to the 59% difference between 80% (presence IV) and 21% (presence II) constancy. Similarly, the comparison of 20.1% mean cover (significance class VI) versus 10.0% mean cover (significance class IV) is equivalent to 33% (significance class VI) versus 5.1% (significance class IV) mean cover.

2.  The differential value does not reflect the degree of difference of a species between compared site units. For example, a species with 100% difference in constancy (100% versus 0%) has the same differential value as a 60% constancy to 20% comparison. Similarly the differential value for a species with mean cover 70% versus to 1% comparison has the equivalent differentiating value as 10.1% versus 5.0% mean cover.

3.  The comparative approach is applied only within the same circumscribing (higher) unit requiring an initial top-down analysis (Orders and Alliances need to be decided before an Association comparison can be performed). Additionally the comparison is not pair-wise but between the number of site units that have been deemed to fall under a single higher level unit. This means that the upper hierarchical levels must be determined prior to the comparison and the diagnostic combination of species is relevant only to the units being compared.

For the provincial correlation of regional classifications in the early 1990s, the general principles outlined in Pojar et al. (1987) were applied but the process was not systematic and units were combined by expert review and consensus (Meidinger pers. comm.). In Klinka et al. (1996), the classification of coastal units was also made following Pojar et al principles through 'successive approximations', which are not reproducible.

# A new BEC correlation method

The new method is designed to be an approximation of the Pojar et al. (1987) and Klinka et al. (1996) approaches that allow quantitative analysis. To achieve this a new similarity metric that reflects BEC principles was created. This metric has the following characterisics:

-   equal potential differential value for constancy and cover

-   rescale cover values to increase the differential value of differences at lower mean cover differences

-   principles for what is considered a "significant" difference in constancy or cover are maintained

The methods differs from the Pojar protocol:

-   always a pair-wise comparison of reviewed and accepted site series as the working unit.

-   differences between species constancy and cover are not scaled before comparison

-   minimum constancy to be considered a member of the diagnostic combination of species for a units is 60% (with some accounting for 'near misses' down to 50%)

-   minimum constancy difference to be differential is 40% (this is effectively similar)

-   continuous cube root rescaling of cover to approximate Domin-Krajina scale

-   emphasis can be made be assigned to prominent indicator species with narrow ecological amplitude.

-   all site series are compared and subsequently combined from the bottom up rather than analysis within higher units created from top-down.

Correlation begins with a review process that assesses site series for sufficient plots and internal consistency (diagnostic potential sum) to be considered for quantitative comparison. Proposed site series within a BGC are then compared to ensure that all separate with a minimum dissimilarity to define a subassociation. Site series that do not sufficiently separate are then reviewed for plot assignment and data quality and reanalyzed. If minimum differentiation is still not achieved site series phases are indicated.

The pair-wise comparison compares the combined Diagnostic combination of species (DCS) of two units (pwDCS). Each species in this combined pwDCS has a potential differential value (pdv) for each unit. A shared diagnostic sum (SDS) represents the sum of minimum species pdv value across the units.

A differential value is assigned to each species in the where there are significant differences in constancy (species differential value (sdv)) and/or cover (species dominant differential value (sddv). The unit differential sum (UDS) is the sum of differential values for each unit. The UDS/SDS is the diagnostic ratio for the unit and indicates the one-way similarity to the compared unit. The BEC similarity index (BEC.sim) is the minimum diagnostic ratio of the compared units. We use the minimum PDS value as the BEC.sim to capture cases where one of the assessed units is the central concept and has few/no differential species.

The BEC.sim is a measure of the similarity of the diagnostic species composition of two units and can be used to determine the similarity of any two units in the BEC hierarchy. The BEC.sim is a value between 0 and 1 where 0 represents no shared species and 1 represents statistically identical DCS. We use this similarity index in a agglomerative cluster analysis with average linking to create a dendrogram of the site units within each BGC. Thesholds of similarity are set to identify site units that are too similar and should be merged or plot membership reassessed.

## Some terminology for species:

-   *Differential (d)*: species has significantly higher constancy than in the compared unit. Minimum constancy difference is 40%.

-   *Dominant Differential (dd)*: species has at leasts 10% mean cover and is significantly higher mean cover than in the compared unit.

-   *Companion/Constant (c)*: species with high constancy but not differential.

-   *Constant dominant(cd)*: constant species have greater than 10% cover

-   *Minor companion (cm)*: constant species with less than 1% mean cover.

-   *Differential Potential (dp)*: The potential differential value of a species based on constancy. dp = constancy\^(1/3) \* (constancy/100) where constancy \>= 60% dp = constancy\^(1/3) \* (constancy/100) \* constancy-50/100 where constancy 50-59% The maximum dp is 4 and minimum value is 1.

-   *Dominant Differential Potential (ddp)*: The potential differential value of a species based on cover. ddp = cover\^(1/3) where mean cover \>= 10%. The maximum ddp is 4 and minimum value is 0.5. pds

-   *Potential Diagnostic Value (pdv)*: pdv = 1.25\* *(dp + ddp) The maximum pdv is 10.*

## Some terminology for units

-   *Diagnostic Combination of Species (DCS)*: for a classification unit, the list of species that exceed the constancy threshold with associated mean cover values

-   *Potential Differential Sum (PDS)*: sum of all species pdv for the DCS of a unit

## Some terminology for pair-wise comparison

-   *Species Differential Value (sdv)*: sdv = Constancy Unit1 ^1/3^ - Constancy Unit2 ^1/3^

-   *Species Dominant Differential Value (sddv)*: sddv = Mean Cover Unit1 ^1/3^ - Mean Cover Unit2 ^1/3^

-   *Shared Differential Sum (SDS)*: SDS = sum(min(pdv)) of all species in DCS of both units

-   *Unit Differential Sum(UDS)*: UDS = sum(sdv +sddv)

-   *BEC.sim*: BEC.sim= min(UDS1, UDS2))/SDS

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(DBI)
require(data.table)
require(cluster)
require(dendextend)
require(dynamicTreeCut)
require(gtable)
require(gtsummary)
require(colorspace)
require(openxlsx)
require(tictoc)
require(labdsv)
require(indicspecies)
require(Polychrome)
require(ggdendro)
require(purrr)
require(ggplotify)
require(grid)
set.seed(1279)
source("./_functions/_bec_dist.R")
source("./_functions/_bec_dist_matrix.R")
source("./_functions/_lump_species.R")
source("./_functions/_lump_species2.R")
source("./_functions/_create_su_vegdata.R")
source("./_functions/_create_analysis_vegsum.R")
source("./_functions/_TabletoTree.R")
source("./_functions/_TreetoTable.R")
source("./_functions/_add_vars.R")
source("./_functions/_do_pairwise.R")
source("./_functions/_create_diagnostic_veg.R")
source("./_functions/_return_similar_pairs.R")
source("./_functions/_read_sppmaster.R")
source("./_functions/_combined_su.R")
source("./_functions/_create_veg_sum.R")
#source('./_functions/_create_veg_sum2.R')
source('./_functions/_build_species_ordering.R')
source('./_functions/_format_veg_table.R')
source('./_functions/_format_veg_table2.R')
source('./_functions/_encode_veg_sum.R')
source('./_functions/_create_dendro.R')
source('./_functions/_create_dendro_all.R')
source('./_functions/_create_dendro_bybgc.R')
source('./_functions/_draw_ss_edatope.R')
```

```{r constancy differntial points, echo=FALSE}
#| label: fig-constancy-diff
#| fig-cap: "Pairwise Differential Value: Constancy"
#| fig-cap-location: bottom
#| warning: false
#| tbl-align: "left"
#| fig-width: 6
#| out-width: 6in
#| fig-height: 6
#| out-height: 6in

focal = seq(60, 100, by = 10)
focal2 = seq(50, 58, by=2)
focal = c(focal2, focal) 
target = seq(10,100, by = 10)
target2 = seq(0,9, by = 1)
target = c(target2, target) 
const.list <- expand.grid(focal, target)

const.list <- const.list %>% mutate((Var1-Var2)^(1/3)* ((Var1-Var2)/100)) %>% 
  rename(focal = 1, target = 2, value = 3) %>% 
  mutate(value = ifelse(focal<=60, value*(abs(10-(60.01-focal))/10), value)) %>%
    mutate(value = ifelse(target > focal, 0, value)) %>%
  mutate(value = ifelse(value>4, 4.0,value)) %>% 
    mutate(value = round(value, 1))
const.list2 <- const.list %>% mutate(focal = as.factor(focal), target = as.factor(target)) %>% mutate(Differential = as.factor(ifelse(value>0.6, "Differential", "Not Significant")))

  ggplot(const.list2, aes(y = focal, x = target, fill = Differential)) +
  geom_tile(color = "white",
            lwd = 0.5,
            linetype = 1) +
    geom_text(aes(label = value), color = "white", size = 2.5)+
    coord_fixed() +
    scale_fill_manual(values=c("darkgreen", "red"))+
    xlab("Target unit species constancy") + 
    ylab("Focal unit species constancy")+
    theme(
axis.title.x = element_text(size=8, face="bold"),
axis.title.y = element_text(size=8, face="bold"))+
    theme(legend.position="top")+
    theme(legend.background = element_rect(fill="lightblue",
                                  size=0.5, linetype="solid", 
                                  colour ="darkblue"))+
    theme(legend.title=element_blank())

```

```{r cover differntial points, echo=FALSE}
#| label: fig-cover-diff
#| fig-cap: "Pairwise Differential Value: Cover"
#| fig-cap-location: bottom
#| warning: false
#| tbl-align: "left"
#| fig-width: 6
#| out-width: 6in
#| fig-height: 6
#| out-height: 6in
focal = seq(20, 100, by = 10)
focal2 = seq(5, 15, by=5)
focal3 = seq(2, 4, by=1)
focal = c(focal3, focal2, focal) 
target = seq(20, 100, by = 10)
target2 = seq(10, 15, by=5)
target3 = seq(0, 9 , by=1)
target = c(target3, target2, target) 
cov.list <- expand.grid(focal, target)

cov.list <- cov.list %>% mutate(abs((Var1^(1/3))-(Var2^(1/3)))) %>% 
  rename(focal = 1, target = 2, value = 3) %>% 
  mutate(value = ifelse(focal<10, value*(abs(10-(10.01-focal))/10), value)) %>%
    mutate(value = ifelse(value>4, 4.0,value)) %>%
    mutate(value = round(value, 1)) %>% 
  mutate(value = ifelse(target > focal, 0, value))

cov.list2 <- cov.list %>% mutate(focal = as.factor(focal), target = as.factor(target)) %>% mutate(Differential = as.factor(ifelse(value>=0.6, "Differential", "Not Significant")))

  ggplot(cov.list2, aes(y = focal, x = target, fill = Differential)) +
  geom_tile(color = "white",
            lwd = 0.5,
            linetype = 1) +
    geom_text(aes(label = value), color = "white", size = 2.5)+
    coord_fixed(ratio=1) +
    scale_fill_manual(values=c("darkgreen", "red"))+
    xlab("Target unit species percent cover") + 
    ylab("Focal unit species percent cover")+
    theme(
axis.title.x = element_text(size=6, face="bold"),
axis.title.y = element_text(size=6, face="bold"))+
    theme(legend.position="top")+
    theme(legend.background = element_rect(fill="lightblue",
                                  size=0.5, linetype="solid", 
                                  colour ="darkblue"))+
    theme(legend.title=element_blank())

```

```{r constancy diff value, echo=FALSE}
  # const.grid <- const.list %>%  pivot_wider(names_from = target, values_from = value) %>% column_to_rownames("focal")
# cov.grid <- cov.list %>%
#   pivot_wider(names_from = target, values_from = value)


# su_gt <-  gt::as_gtable(gt::gt(const.grid, rownames_to_stub = TRUE) %>%
#                                 gt::fmt_number(decimals = 2) |>
#                                 gt::tab_options(table.font.size = 10, table_body.hlines.color = "gray25", table_body.hlines.width = 0.5, table_body.vlines.color = "gray25", table_body.vlines.width = 1) |>
#                                 gt::tab_header(title = "Differential Value: Constancy Comparison") |>
#                                 gt::cols_width(everything() ~ px(30)) |>
#                                 gt::tab_options() %>%
#                                 gt::tab_style(style = gt::cell_borders(sides = "all", color = "#000000", style = "solid", weight = gt::px(1)), locations = gt::cells_body()), plot = TRUE)

### add cell colour if below 0.6
# const.grid <-  const.grid %>%
#     summarise(across(everything(),  ~
#                           setNames(tibble(.x), cur_column()) %>%
#                                   gt::gt() %>%
#                                  gt::tab_style(
#                                    style = gt::cell_text(color = "red", weight = "bold"),
#                                    locations = gt::cells_body(
#                                      columns = cur_column(),
#                                      rows = .x <0.6)
#                                  )  %>%
#                        gt::as_raw_html()))
# 
# const.grid <- const.grid %>%
#      gt::gt() %>%
#    gt::fmt_markdown(columns = everything())
# out1
```

# Evaluate site series within each BGC

## Read in data

Vegetation data is read in from saved .RDS file generated from the BECMaster cleaning scripts. A compiled SU table is build from all BGC \_SU tables stored in the coast guide Vpro database. Taxonomy is read in from the species taxonomy database. A species lumping code table is read in from the Correlation2_Spp_lump.accdb database and the vegetation data is lumped using the lump_species function.

```{r load data, echo=FALSE, message=FALSE}
veg.dat <- readRDS("./clean_data/Analysis_BECMaster_Veg.rds") ### named veg.dat
taxon.all <- read_sppmaster()
taxon.lifeform <- taxon.all %>%
  filter(Codetype == "U" | Codetype == "X" | Codetype == "D") %>%
  dplyr::select(Code, ScientificName, EnglishName, Lifeform) %>%
  distinct()
veglump <- dbConnect(
  odbc::odbc(),
  .connection_string = "Driver={Microsoft Access Driver (*.mdb, *.accdb)}; DBQ=D:/BC_Correlation2_Vpro_2023/Correlation2_Spp_lump.accdb;")
lump <- dbReadTable(veglump, "CorrelationII_Lump")
dbDisconnect(veglump)
veg.dat2 <- lump_species(vegdata = veg.dat, lump, use.subtaxa = FALSE)
db <- "D:/BC_Correlation2_Vpro_2023/CoastGuide_Forested.accdb"
su <- combined_su(db)
su.nf <- su %>%
  filter(grepl('_[[:alpha:]]', SiteUnit)) %>% select(-SiteUnit.orig) %>% arrange(SiteUnit)
su <- su %>%
  filter(!grepl('poor|low|-S|add|nudum|_[[:alpha:]]', SiteUnit)) %>% select(-SiteUnit.orig) %>% arrange(SiteUnit)
#   filter(grepl('01', SiteUnit)) ###zonal specific
su <- su %>%
filter(!bgc %in% c('CWHvh3', 'CWHwh1', 'CWHwh2', 'CWHvh3', 'MHwh'))###BGC specific|CWHms
su <- su %>%
filter(bgc %in% c('CWHvh1', 'CWHvh2', 'CWHvm1', 'CWHvm2', 'CWHvm3', 'CWHvm4', 'CWHwm'))###BGC specific|CWHms 
#filter(bgc %in% c('CWHmm1'))
  bgc.unique <- unique(su$bgc)
ss.unique <- su %>% select(SiteUnit, bgc) %>% distinct

 becmaster <- dbConnect(odbc::odbc(), .connection_string = "Driver={Microsoft Access Driver (*.mdb, *.accdb)}; DBQ=D:/BECMaster/BECMaster_fixing.accdb;")
plot.env <- dbReadTable(becmaster, "BECMaster_fixing_Env")
dbDisconnect(becmaster)

```

## Examine site series within each BGC

1.  Identify site series that have fewer than 5 plots (difficult to quantitatively analyse)

2.  Identify site series that have low diagnostic potential (review units for membership consistency).

```{r build pair.wise similarity matrix, echo=FALSE}

key.site.indicators <- c("PICESIT", "POPUTRI", "LYSIAME", "GAULSHA", "OPLOHOR", "ELLIPYR","ATHYFIL", "RUBUSPE", "EQUIARV", "GYMNDRY", "VALESIT", "CASSMER", "LUETPEC", "POLYMUN", "STRUSPI", "RHODGRO", "EMPENIG")#,  "TIARELLA", "DRYOEXP" )
reduced.exceptions <- c("SPHAGNUM", "CLADONIA", "CLADINA", "RACOMITR", "MNIUM")
# reduced.lifeforms = c(1,2)
reduced.lifeforms <- c(9, 10, 11)
### select units to run
su2 <- su
## the min constancy is min for full value declines more rapidly towards 50%
vegsum.pairs <- do_pairwise(veg.dat2,
  su = su2, minimportance = 0, minconstancy = 60,
  noiseconstancy = 10,
  minplots = 1,
  minor = 1,
  use.ksi = TRUE, ksi = key.site.indicators, ksi.value = 1.5,
  reduce.lifeform = TRUE, reduced.lifeforms = reduced.lifeforms, reduction = .1,
  reduced.exceptions = reduced.exceptions
)

xx <- vegsum.pairs %>%
  filter(Unit1 == "CWHvm1_103", Unit2 == "CWHvm1_103->111.2")

unit.compare <- vegsum.pairs %>%
  select(Unit1, Unit2, BEC.sim.min, BEC.sim.mean, diff.ratio.x, diff.ratio.y, nplots.x, nplots.y,
         unit.diag.sum.x, unit.diag.sum.y) %>% filter(nplots.x>0) %>%
  mutate(BEC.sim.min = round(BEC.sim.min, 2)) %>% 
 distinct()
unit.compare$bgc1 <- stringr::word(unit.compare$Unit1, 1, sep = "\\_")
unit.compare$bgc2 <- stringr::word(unit.compare$Unit2, 1, sep = "\\_")

yy <- vegsum.pairs %>% 
  select(Unit1, Unit2, Species, diagnostic.potential.x, diagnostic.potential.y, shared.diag, diff.pts.x, diff.pts.y, sum.shared.diag,diff.tot.x, diff.tot.y,  diff.ratio.x, diff.ratio.y, diff.ratio,BEC.sim.mean, BEC.sim.min) %>% 
  filter(Unit1 == "CWHvm1_111.1", Unit2 == "CWHvm1_101->111.1")

```

```{r site series with too few plots, echo=FALSE}
#| label: tab-too-few-plots
#| tbl-cap: "Site Units with Fewer than 5 Plots"
#| tbl-cap-location: top
#| warning: false
#| tbl-align: "left"

compared <- unit.compare %>% filter(bgc1 == bgc2)
ss_too.few1 <- compared %>%
  select(Unit1, nplots.x) %>% 
  filter(nplots.x < 5, nplots.x>0) %>% 
  rename("Number of Plots" = nplots.x, "Site Unit" = Unit1) %>% 
  distinct()
ss_too.few2 <- compared %>%
  select(Unit2, nplots.y) %>% 
  filter(nplots.y < 5, nplots.y>0) %>% 
  rename("Number of Plots" = nplots.y, "Site Unit" = Unit2) %>% 
  distinct()
ss_too.few <- rbind(ss_too.few1, ss_too.few2) %>% distinct() %>% arrange(`Site Unit`)
# low.num <- gt::as_gtable(gt::gt(ss_too.few) %>% gt::fmt_number(decimals = 0)|> gt::tab_options(table.font.size = 10), plot = TRUE)

gt::gt(ss_too.few) %>% gt::fmt_number(decimals = 0)|> gt::tab_options(table.font.size = 10)
```

```{r site series with low diagnostic potential, echo=FALSE}
#| label: tab-low-diagnostic
#| tbl-cap: "Site Units with Low Diagnostic Potential"
#| tbl-cap-location: top
#| warning: false
#| tbl-align: "left"
ss_low.diag1 <- compared %>%
  select(Unit1, unit.diag.sum.x)  %>%  distinct() %>%
  filter(unit.diag.sum.x < 30, unit.diag.sum.x >0) %>% 
  rename("Diagnostic Potential" = unit.diag.sum.x, "Site Unit" = Unit1) %>%
  distinct()
ss_low.diag2 <- compared %>%
  select(Unit2, unit.diag.sum.y)  %>% 
  filter(unit.diag.sum.y <30, unit.diag.sum.y >0) %>% 
  rename("Diagnostic Potential" = unit.diag.sum.y, "Site Unit" = Unit2) %>%
  distinct()
ss_low.diag <- rbind(ss_low.diag1, ss_low.diag2) %>% distinct()
# low.diag.pot <- gt::as_gtable(gt::gt(ss_low.diag) %>% gt::fmt_number(decimals = 2)|> gt::tab_options(table.font.size = 10), plot = TRUE)
gt::gt(ss_low.diag) %>% gt::fmt_number(decimals = 2)|> gt::tab_options(table.font.size = 10)
# require(gridExtra)
# grid.arrange(low.num, low.diag.pot, ncol = 2)
```

```{r site units that are too similar, echo=FALSE}
#| label: tab-sites-similar
#| tbl-cap: paste0("Site Series pairs with poor differentiation (BEC.sim >= .93)")
#| tbl-cap-location: top
#| warning: false
#| tbl-align: "left"
ss_similar <- compared %>%
  select(Unit1, Unit2, BEC.sim.min) %>%
  dplyr::filter(BEC.sim.min >= .93) %>% mutate(Units = paste0(Unit1, " vs ", Unit2)) %>%
  select(-Unit2, -Unit1) %>% 
  rename("Similarity" = BEC.sim.min, "Site Units" = Units) %>%
  distinct() 
# low.diff <- gt::as_gtable((gt::gt(ss_similar) |> gt::fmt_number(decimals = 2)|> gt::tab_options(table.font.size = 10) |> gt::cols_width(Site.Units ~ gt::px(250))), plot = TRUE, text_grob = gridtext::richtext_grob)
gt::gt(ss_similar) |> gt::fmt_number(decimals = 2)|> gt::tab_options(table.font.size = 10) 
```

# Compare site series within each BGCs

This section is to identify site series that do not differentiate adequately and require review.

## Dendrogram of cluster analysis by BGC

The dendrogram is an approximate representation of the similarity matrix. It is constructed using agglomerative hierarchical clustering which merges site units from the bottom up. The red line represents the minimal dissimilarity required to separate units into different site series. Any splits to the right of the red line should be considered for merging into the same site series (possibly as phases). Current threshold is set at 7% but assessment is required. Splits that occur between the green association threshold and the red minimum threshold will likely be merged at the subassociation level in the hierarchy. The green line represents the dissimilarity threshold for an association. Site unit 'leaves' to the right of this threshold will fall under the same association in the hierarchy. Current threshold is set at 17% but assessment is required.

```{r cluster analysis, echo=FALSE}
#bgc.unique <- c("CDFmm", "CWHvm3")
for (bgc.choose in bgc.unique){
  create_dendro_bybgc(bgc.choose, unit.compare, threshold.low = .07, threshold.high = .18)
}
```

## Count of plot edaphic positions by site unit

```{r build edatopic table, echo=FALSE}

#bgc.choose <- "CWHvm1"
# draw_ss_edatope(plot.env, su, bgc.choose = bgc.unique)
```

## export veg summary tables to excel with a sheet for each BGC

```{r build veg guide summary and export to excel, warning=FALSE, message=FALSE}
# require(openxlsx)
# require(tictoc)
# bgc.list <- unique(su$bgc)
# vegdata <- readRDS('./clean_data/Reports_BECMaster_Veg.rds')
# veg.dat2 <- lump_species2(vegdata = vegdata, lump, use.subtaxa = FALSE)
# ###Dels
# # bgc.list = c("CDFmm", "CWHds2", "CWHmm1", "CWHmm2", "CWHws1", "CWHws2",
# # "CWHws3", "CWHxm1", "CWHxm2", "CWHxm3", "IDFww1")
# ### Bobs
# # bgc.list = c("CWHds1", "CWHms1", "CWHms2", "CWHms3", "MHmm1",
# # "MHmm2", "MHws", "MHvh")
# ### Allen's
# # bgc.list = c("CWHvh1", "CWHvh2", "CWHvm1", "CWHvm2", "CWHvm3",
# # "CWHvm4", "CWHwm")
# #bgc.list = c("CDFmm")
# su <- su %>% arrange(bgc)
# #bgc.choose = "CWHvh1"
# vegsum.wbk <- createWorkbook()
# tic()
# 
# for(bgc.choose in bgc.list){
# vegSum <- 
#   create_veg_sum(vdat = veg.dat2, siteUnits = su , BGC = bgc.choose, strata.by = "Layer")
# ##determine order of species by unit
# indic.order <- build_species_ordering(vdat = veg.dat2, vsum = vegSum, code.lump=lump, siteUnits =su, BGC = bgc.choose)
# veg.sum.table <- format_veg_table(vsum = vegSum, spp=taxon.lifeform)
# openxlsx::addWorksheet(vegsum.wbk, sheetName = bgc.choose)
# openxlsx::writeData(vegsum.wbk, sheet = bgc.choose, veg.sum.table) 
# }
# toc()
# saveWorkbook(vegsum.wbk, "./vegsum.tables/LMH77_draft_veg_tables-AB.xlsx", overwrite = TRUE)

```
